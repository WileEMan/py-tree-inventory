[tool.poetry]
name = "tree_inventory"
version = "1.0.0"
description = "Utility for comparing two large trees using checksums"
authors = [
    "Wiley Black <TheWiley@gmail.com>"
]
readme = "README.md"
packages = [{include = "tree_inventory"}]

[tool.poetry.dependencies]
python = ">=3.9"
tqdm = "*"
humanfriendly = ">=10"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
coverage = ">=6.3"
flake8 = "^6.0.0"
black = "^23.1.0"
mypy = "^1.6.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
coverage = ">=6.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.mypy]
ignore_missing_imports = true

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = true
major_on_zero = true
tag_format = "v{version}"
version_variables = [
  "src/__init__.py:__version__"
]
version_toml = [
  "pyproject.toml:tool.poetry.version",
]

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.branches.main]
match = "(main)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false
